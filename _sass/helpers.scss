/// Reutilize Bootstrap mixins to add new responsive modifiers
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .border#{$infix}-thick { border-width: 4px !important; }
    .text-decoration#{$infix}-underline { text-decoration: underline !important; }

    .border#{$infix}   { border: $border-width solid $border-color !important; }
    .border#{$infix}-0 { border: 0 !important; }

    @each $direction in (top, right, bottom, left) {
      .border#{$infix}-#{$direction}   { border-#{$direction}: $border-width solid $border-color !important; }
      .border#{$infix}-#{$direction}-0 { border-#{$direction}: 0 !important; }
    }

    .transition#{$infix} {
      @include transition($transition-base);
    }

    .text#{$infix}-nowrap {
      white-space: nowrap;
    }

    .flex-grow#{$infix}-0 {
      flex-grow: 0 !important;
    }

    @each $spacer, $length in $spacers {
      .f#{$infix}-#{$spacer} {
        font-size: $length !important;
      }

      @each $direction in (top, right, bottom, left) {
        .#{$direction}#{$infix}-#{$spacer} { #{$direction}: $length !important; }
        .#{$direction}#{$infix}-n#{$spacer} { #{$direction}: -$length !important; }
      }

      /// Border radius
      ///
      /// @example html
      ///   <div class="rounded-3"></div>
      .rounded#{$infix}-#{$spacer} {
        border-radius: $length !important;
      }
    }

    @each $cursor in (pointer, none) {
      .cursor#{$infix}-#{$cursor} {
        cursor: $cursor;
      }
    }

    @each $event in (none, auto) {
      .pointer-event#{$infix}-#{$event} {
        pointer-events: $event;
      }
    }

    @each $position in $positions {
      .position#{$infix}-#{$position} { position: $position !important; }
    }

    .h1#{$infix} { @include font-size($h1-font-size); }
    .h2#{$infix} { @include font-size($h2-font-size); }
    .h3#{$infix} { @include font-size($h3-font-size); }
    .h4#{$infix} { @include font-size($h4-font-size); }
    .h5#{$infix} { @include font-size($h5-font-size); }
    .h6#{$infix} { @include font-size($h6-font-size); }

    $overflows: (auto, hidden, scroll, visible);
    $overflow-axis: (x, y);
    @each $overflow in $overflows {
      .overflow#{$infix}-#{$overflow} {
        overflow: $overflow !important;
      }

      @each $axis in $overflow-axis {
        .overflow-#{$axis}#{$infix}-#{$overflow} {
          overflow-#{$axis}: $overflow !important;
        }
      }
    }

    @each $color, $rgb in $colors {
      .background#{$infix}-#{$color}-target {
        &:target {
          background-color: $rgb !important;
          color: $white;
          scroll-margin-top: 100px;
        }
      }
    }


    @each $color, $rgb in $colors {
      .background#{$infix}-#{$color} {
        background-color: $rgb !important;

        &:focus {
          background-color: $rgb !important;
        }
      }

      @each $opacity, $degree in $opacities {
        .background#{$infix}-#{$color}-t#{$opacity} {
          background-color: scale-color($rgb, $alpha: $degree);
        }
      }

      .scrollbar#{$infix}-#{$color} {
        scrollbar-color: var(--#{$color}) transparent;
        scrollbar-width: thin;

        &::-webkit-scrollbar {
          width: 5px;
          height: 8px;
          background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
          background: var(--#{$color});
        }
      }

      .border#{$infix}-#{$color} {
        border-color: $rgb !important;
      }

      .#{$color} {
        color: $rgb !important;

        &:focus {
          color: $rgb !important;
        }

        ::-moz-selection,
        ::selection {
          background: $rgb;
          color: white;
        }

        mark {
          background-color: $rgb !important;
          color: white !important;
        }
      }

      /// Cambiar el color al pasar por encima o hacer foco
      ///
      /// @example html
      ///   <div class="black hover-red"></div>
      .hover-#{$color} {
        &:hover,
        &:focus-within {
          color: var(--#{$color}) !important;
        }
      }
    }

    @each $prop, $abbrev in (width: w, height: h) {
      @each $size, $length in $sizes {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .min-#{$abbrev}#{$infix}-#{$size} { min-#{$prop}: $length !important; }
        .max-#{$abbrev}#{$infix}-#{$size} { max-#{$prop}: $length !important; }
      }
    }

    /// Z-Indexes segÃºn Bootstrap
    .z-index#{$infix}-dropdown { z-index: $zindex-dropdown !important; }
    .z-index#{$infix}-sticky { z-index: $zindex-sticky !important; }
    .z-index#{$infix}-fixed { z-index: $zindex-fixed !important; }
    .z-index#{$infix}-backdrop { z-index: $zindex-modal-backdrop !important; }
    .z-index#{$infix}-modal { z-index: $zindex-modal !important; }
    .z-index#{$infix}-popover { z-index: $zindex-popover !important; }
    .z-index#{$infix}-tooltip { z-index: $zindex-tooltip !important; }
  }
}

/// This creates a navbar that can be toggled on focus and doesn't
/// require CSS.
.navbar-focus-within {
  &:focus-within {
    .navbar-collapse {
      @extend .d-block;
    }
  }

  .dropdown {
    & > .dropdown-menu {
      @extend .d-none;
    }

    &:hover,
    &:focus-within {
      & > .dropdown-menu {
        @extend .d-block;
      }
    }
  }
}

.custom-checkbox {
  .custom-control-label::before {
    @include border-radius($custom-checkbox-indicator-border-radius);
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: url("/public/radio-bg.png");
      background-color: white;
      background-size: contain;
      height: 18px;
      width: 18px;
      margin-top: -2px;
    }
  }

  .custom-control-label::before {
    width: 18px;
    height: 18px;
    border: 0;
    margin-top: -2px;
  }

  .custom-control-input {
    width: 18px;
    height: 18px;
  }
}

.custom-checkbox-list {
  .custom-control-label::before {
    @include border-radius($custom-checkbox-indicator-border-radius);
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: url("/public/checkbox-bg-white.png");
      background-size: contain;
      height: 18px;
      width: 18px;
      margin-top: -2px;
    }
  }

  .custom-control-label::before {
    width: 18px;
    height: 18px;
    border: 0;
    margin-top: -2px;
    background-color: #666;
    border-color: #666;
  }

  .custom-control-input {
    width: 18px;
    height: 18px;
  }
}
